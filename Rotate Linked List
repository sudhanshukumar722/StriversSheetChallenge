/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
     if(head==NULL||head->next==NULL)
    {
        return head;
    }
    Node *curr = head;
    Node *temp = head;
    int l=0;
    while(curr->next!=NULL)
    {
        curr=curr->next;
        l++;
    }
    curr->next=head;
    int res=l+1;
    while(l<k)
    {
        l=l+res;
    }
    for(int i=0;i<l+1-k;i++)
    {
        curr=curr->next;
        temp=temp->next;
    }
    curr->next=NULL;
    return temp;
}
